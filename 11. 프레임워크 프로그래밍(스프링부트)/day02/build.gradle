plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.choongang'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testRuntimeOnly 'com.h2database:h2' // 실제 애플리케이션과 테스트 환경의 분리
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'

	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	// JPA에서 사용하는 생명주기 관련 어노테이션을 지원하기 위해 필요

	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	// JPA의 주요 어노테이션과 인터페이스를 정의하며, 이를 통해 JPA 기능을 사용할 수 있게 해줌

	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

sourceSets{
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile){
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
	file(querydslDir).deleteDir()
}
